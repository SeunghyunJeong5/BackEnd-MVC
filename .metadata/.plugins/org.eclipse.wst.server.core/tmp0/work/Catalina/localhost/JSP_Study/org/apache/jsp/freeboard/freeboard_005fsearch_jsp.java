/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-07 06:50:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.freeboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.sql.*;

public final class freeboard_005fsearch_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/freeboard/conn_oracle.jsp", Long.valueOf(1688711640311L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write(" \n");
 request.setCharacterEncoding("utf-8"); 
      out.write('\n');
      out.write("\n");
      out.write("    \n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Oracle DB Connection</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	");

		//변수 초기화     //JSP 블락내에서 주석 
		Connection conn = null;      
		String driver = "oracle.jdbc.driver.OracleDriver";
		String url = "jdbc:oracle:thin:@localhost:1521:XE"; 
			
		try {
			Class.forName(driver); 	//오라클 드라이버를 로드함 
			conn = DriverManager.getConnection (url, "C##HR2", "1234"); 

		}catch (Exception e) {
			e.printStackTrace(); 
		}

	
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<HTML>\n");
      out.write("<HEAD><TITLE>게시판(검색모드)</TITLE>\n");
      out.write("</HEAD>\n");
      out.write("<BODY>\n");
      out.write("\n");
      out.write("<P>\n");
      out.write("<P align=center>\n");
      out.write(" <FONT color=#0000ff face=굴림 size=3>\n");
      out.write(" <STRONG>자유 게시판(검색모드)</STRONG>\n");
      out.write(" </FONT>\n");
      out.write("</P> \n");
      out.write("<FORM method=post name=search action=\"freeboard_search.jsp\">\n");
      out.write(" <TABLE border=0 width=75%>\n");
      out.write("  <TR>\n");
      out.write("   <TD align=left width=30% valign=bottom>\n");
      out.write("    [<A href=\"freeboard_list03.jsp\">자유 게시판(일반모드)</A>]</TD>\n");
      out.write("   <TD align=right width=70% valign=bottom>\n");
      out.write("    <FONT size=2 face=굴림>\n");
      out.write("     <SELECT name=stype >\n");
      out.write("     	<!--  stype 에 넘어오는 value 값에 따라서 다르게 출력  \n");
      out.write("        <OPTION value=1 >이름 </OPTION>\n");
      out.write("	    <OPTION value=2 >제목	 </OPTION>\n");
      out.write("	    <OPTION value=3 >내용 </OPTION>\n");
      out.write("	    <OPTION value=4 >이름+제목 </OPTION>\n");
      out.write("	    <OPTION value=5 >이름+내용 </OPTION>\n");
      out.write("	    <OPTION value=6 >제목+내용 </OPTION>\n");
      out.write("	    <OPTION value=7 >이름+제목+내용 </OPTION>\n");
      out.write("     -->\n");
      out.write("     \n");
      out.write("     \n");
 
      //jsp 코드 블락 : <option> 넘어오는 변수에 따라서 해당 내용을 출력 
      String cond = null ;      // SQL 쿼리를 담는 변수 : stype : 1
      int what = 1 ;   // stype 에 넘어오는 변수 int 형으로 변환해서 담는 변수 
      		// 2 : 제목 , 3 : 내용, 4: 이름 + 제목 
      String val = null ; // sval :에서 넘어오는 검색어를 담는 변수 
      
      what = Integer.parseInt(request.getParameter("stype"));  //옵션
      val = request.getParameter("sval");  //검색어 
      
      if (what == 1) {
    	  out.println ("<OPTION value=1 selected >이름 </OPTION>"); 
    	  cond = "where name like '%" + val + "%'";
      }else {
    	  out.println ("<OPTION value=1>이름 </OPTION>"); 
      }
      
      if (what == 2) {
    	  out.println ("<OPTION value=2 selected>제목	 </OPTION>"); 
    	  cond = "where subject like '%" + val + "%'";
      }else {
    	  out.println ("<OPTION value=2>제목	 </OPTION>"); 
      }
      
      if (what == 3) {
    	  out.println ("<OPTION value=3 selected>내용 </OPTION>"); 
    	  cond = "where content like '%" + val + "%'";
      }else {
    	  out.println ("<OPTION value=3 >내용 </OPTION>"); 
      }
      
      if (what == 4) {
    	  out.println ("<OPTION value=4 selected>이름+제목 </OPTION>");
    	  cond = "where name like '%" + val + "%' or subject like '%" + val + "%'";
      }else {
    	  out.println ("<OPTION value=4 >이름+제목 </OPTION>"); 
      }
      
      if (what == 5) {
    	  out.println ("<OPTION value=5 selected>이름+내용 </OPTION>"); 
    	  cond = "where name like '%" + val + "%' or content like '%" + val + "%'";
      }else {
    	  out.println ("<OPTION value=5 >이름+내용 </OPTION>"); 
      }
      
      if (what == 6) {
    	  out.println ("<OPTION value=6 selected>제목+내용 </OPTION>"); 
    	  cond = "where subject like '%" + val + "%' or content like '%" + val + "%'";
      }else {
    	  out.println ("<OPTION value=6 >제목+내용 </OPTION>"); 
      }
      
      if (what == 7) {
    	  out.println ("<OPTION value=7 selected>이름+제목+내용 </OPTION>"); 
    	  cond = "where name like '%" + val + "%' or subject like '%" + val + "%'";
    	  cond += " or content like '%" + val + "%'"; 
      }else {
    	  out.println ("<OPTION value=7 >이름+제목+내용 </OPTION>"); 
      }
      
      

      out.write("\n");
      out.write("     </SELECT>\n");
      out.write("	</FONT>\n");
      out.write("    <INPUT type=text name=\"sval\" value=\"");
      out.print(request.getParameter("sval"));
      out.write("\">\n");
      out.write("    <INPUT type=submit value=\"검색\">\n");
      out.write("   </TD>\n");
      out.write("  </TR>\n");
      out.write(" </TABLE>\n");
      out.write("</FORM>\n");
      out.write("<CENTER>\n");
      out.write("\n");

/*
out.println (what + "<p/>"); 
out.println (val + "<p/>"); 
if (true) return; 
*/


      out.write("\n");
      out.write("\n");
      out.write("<TABLE border=0 width=600 cellpadding=4 cellspacing=0>\n");
      out.write(" <tr align=\"center\"> \n");
      out.write("  <td colspan=\"5\" height=\"1\" bgcolor=\"#1F4F8F\"></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr align=\"center\" bgcolor=\"#87E8FF\"> \n");
      out.write("  <td width=\"42\" bgcolor=\"#DFEDFF\"><font size=\"2\">번호</font></td>\n");
      out.write("  <td width=\"340\" bgcolor=\"#DFEDFF\"><font size=\"2\">제목</font></td>\n");
      out.write("  <td width=\"84\" bgcolor=\"#DFEDFF\"><font size=\"2\">등록자</font></td>\n");
      out.write("  <td width=\"78\" bgcolor=\"#DFEDFF\"><font size=\"2\">날짜</font></td>\n");
      out.write("  <td width=\"49\" bgcolor=\"#DFEDFF\"><font size=\"2\">조회</font></td>\n");
      out.write(" </tr>\n");
      out.write(" <tr align=\"center\"> \n");
      out.write("  <td colspan=\"5\" bgcolor=\"#1F4F8F\" height=\"1\"></td>\n");
      out.write(" </tr>\n");
      out.write(" \n");
      out.write(" ");
	
 	//페이징 처리 
 Vector name=new Vector();
 Vector inputdate=new Vector();
 Vector email=new Vector();
 Vector subject=new Vector();
 Vector rcount=new Vector();
 Vector keyid=new Vector();
 Vector step=new Vector();
 
 int where=1;       //현재 위치한 페이지 

 int totalgroup=0;
 int maxpages=5;			//페이징 처리부분의 2개의 페이지만 최대로 출력
 int startpage=1;
 int endpage=startpage+maxpages-1;
 int wheregroup=1;			//페이지 그룹 
 
 if (request.getParameter("go") != null) { 
  where = Integer.parseInt(request.getParameter("go"));
  wheregroup = (where-1)/maxpages + 1;
  startpage=(wheregroup-1) * maxpages+1;  
  endpage=startpage+maxpages-1; 
  
  
 } else if (request.getParameter("gogroup") != null) {
  wheregroup = Integer.parseInt(request.getParameter("gogroup"));
  startpage=(wheregroup-1) * maxpages+1;  
  where = startpage ; 
  endpage=startpage+maxpages-1; 
  
  
 }
 int nextgroup=wheregroup+1;
 int priorgroup= wheregroup-1;
 
 int nextpage=where+1;
 int priorpage = where-1;
 int startrow=0;
 int endrow=0;
 int maxrows=5;
 int totalrows=0;
 int totalpages=0;
 
 int id=0;
 	
 	//페이징 처리 블락
 
 	//검색된 내용을 출력 하는 블락  
 		
 	String sql = null; 
 	Statement stmt = null; 
 	ResultSet rs = null; 
 	
 	//cond : option 에 선택자에 따라서 다른 쿼리가 변수로 들어옴. 
 	sql = "select * from freeboard " + cond ;
 	sql += " order by id desc" ; 
 
 	
 	 out.println (sql);
 	
 	/*
 	if (true) return; 
 	 */
 	
 	stmt = conn.createStatement(); 
 	rs = stmt.executeQuery(sql); 	//
 	
 	if (!(rs.next())){
 		out.println("해당내용이 DB 에 존재 하지 않습니다. ");
 	} else {   //검색된 내용이 존재 한다면 
 		
 		do {
 			
 		    keyid.addElement(new Integer(rs.getInt("id")));
 		    name.addElement(rs.getString("name"));
 		    email.addElement(rs.getString("email"));
 		    String idate = rs.getString("inputdate");
 		    idate = idate.substring(0,8);
 		    inputdate.addElement(idate);
 		    subject.addElement(rs.getString("subject"));
 		    rcount.addElement(new Integer(rs.getInt("readcount")));
 		    step.addElement(new Integer(rs.getInt("step")));
 		}while(rs.next()); 
 	
 	
 	   totalrows = name.size();
 	   totalpages = (totalrows-1)/maxrows +1;
 	   startrow = (where-1) * maxrows;
 	   endrow = startrow+maxrows-1  ;
 	   
 	   
 	   if (endrow >= totalrows)
 	    endrow=totalrows-1;
 	   
 	   totalgroup = (totalpages-1)/maxpages +1;
 	   if (endpage > totalpages) 
 	    endpage=totalpages;

 	   for(int j=startrow;j<=endrow;j++) {
   
 
      out.write("\n");
      out.write(" \n");
      out.write(" \n");
      out.write(" <tr align=\"center\" bgcolor=\"#87E8FF\"> \n");
      out.write("  <td width=\"42\" bgcolor=\"#DFEDFF\"><font size=\"2\">");
      out.print( keyid.elementAt(j) );
      out.write("</font></td>\n");
      out.write("  <td width=\"340\" bgcolor=\"#DFEDFF\"><font size=\"2\">");
      out.print( subject.elementAt(j)  );
      out.write("</font></td>\n");
      out.write("  <td width=\"84\" bgcolor=\"#DFEDFF\"><font size=\"2\">");
      out.print( name.elementAt(j) );
      out.write("</font></td>\n");
      out.write("  <td width=\"78\" bgcolor=\"#DFEDFF\"><font size=\"2\">");
      out.print( inputdate.elementAt(j) );
      out.write("</font></td>\n");
      out.write("  <td width=\"49\" bgcolor=\"#DFEDFF\"><font size=\"2\">");
      out.print( rcount.elementAt(j) );
      out.write("</font></td>\n");
      out.write(" </tr>\n");
      out.write(" \n");
      out.write("  ");

 	   }
 
 	}
 	
 	
      out.write("\n");
      out.write(" \n");
      out.write(" <tr>\n");
      out.write(" 	<td colspan = \"5\" height=\"5px\"> </td>\n");
      out.write(" </tr>\n");
      out.write(" \n");
      out.write(" <tr> \n");
      out.write(" 	<td colspan = \"5\" align=\"center\"> \n");
      out.write("\n");
      out.write(" ");
 
 	
 	//페이징 출력 부분 
 	
 	
 if (wheregroup > 1) {
  out.print("[<A href=freeboard_search.jsp?gogroup=1"); 
  out.print("&stype="+ what+"&sval=" + val +">처음</A>]");
  out.print("[<A href=freeboard_search.jsp?gogroup="+priorgroup);
  out.print("&stype="+ what+"&sval=" + val +">이전</A>]");
 } else {
  out.println("[처음]") ;
  out.println("[이전]") ;
 }
 if (name.size() !=0) {
  for(int jj=startpage; jj<=endpage; jj++) {
   if (jj==where) 
    out.println("["+jj+"]") ;
   else {
   out.print("[<A href=freeboard_search.jsp?go="+jj);
   out.print("&stype="+ what+"&sval=" + val +">" + jj + "</A>]") ;
   }
  }
 }
 if (wheregroup < totalgroup) {
  out.print("[<A href=freeboard_search.jsp?gogroup="+ nextgroup);
  out.print("&stype="+ what+"&sval=" + val +">다음</A>]");
  out.print("[<A href=freeboard_search.jsp?gogroup="+totalgroup); 
  out.print("&stype="+ what+"&sval=" + val +">마지막</A>]");
 } else {
  out.println("[다음]");
  out.println("[마지막]");
 }
 out.println ("검색된 글 수 :"+totalrows);
 
 
      out.write("\n");
      out.write(" </td>\n");
      out.write(" </tr>\n");
      out.write(" \n");
      out.write(" \n");
      out.write("</TABLE>\n");
      out.write(" \n");
      out.write("</BODY>\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
